/*EMPLOYEE Database Management Program*/
#include<string.h>
#include<stdlib.h>
#include<conio.h>
#include<stdio.h>
#define MAX 100
typedef struct employee
{
int id;
char name[20];
int age;
}emp;
emp e[MAX];
int n;
void create();
void display();
void modify();
void append();
void search();
void sort();
int main()
{
int choice;
while(1)
 {
 printf("\n1.Create\n2.Display\n3.Modify\n4.Append\n5.Search\n6.Sort\n7.EXIT");
 printf("\nEnter Your Choice:");
 scanf("%d",&choice);
 switch (choice)
{
case 1:create();
break;
case 2:display();
break;
case 3:modify();
break;
case 4:append();
break;
case 5:search();
break;
case 6:sort();
break;
default:exit(0);
}
 }
getch();
}
void create()
{
int i;
printf("Enter The No. of New Records to Be Created:");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("Enter ID no.,Name,Age:");
scanf("%d%s%d",&e[i].id,e[i].name,&e[i].age);
}
}
void display()
{
int i;
printf("ID\tNAME\tAGE");
for(i=0;i<n;i++)
{
printf("\n%d\t%s\t%d",e[i].id,e[i].name,e[i].age);
}
}
void modify()
{
int rec,id_new,age_new;
char name_new[20];
printf("Enter The Record No. To be Modified:");
scanf("%d",&rec);
rec--;
printf("Enter new Name:");
scanf("%s",name_new);
printf("Enter new Age:");
scanf("%d",&age_new);
printf("Enter new id:");
scanf("%d",&id_new);
e[rec].id=id_new;
e[rec].age=age_new;
strcpy(e[rec].name,name_new);
display();
}
void append()
{
int rec,m,i;
printf("Enter no. of Records To be Appended:");
scanf("%d",&rec);
m=n+rec;
for(i=n;i<m;i++)
{
printf("Enter ID NAME AGE of Employee:");
scanf("%d%s%d",&e[i].id,e[i].name,&e[i].age);
}
n=m;
display();
}
void search()
{
int id,i,flag=0;
printf("Enter the ID of Employee:");
scanf("%d",&id);
for(i=0;i<n;i++)
{
if(e[i].id==id)
{
printf("\nRecord is Found!!");
printf("\nDetails of Employee are as follows\nID\tNAME\tAGE");
printf("\n%d\t%s\t%d",e[i].id,e[i].name,e[i].age);
flag=1;
break;
}
}
if(flag==0)
{
printf("\nRECORD NOT FOUND");
}
}
void sort()
{
emp temp;
int i,j;
for(i=0;i<=n-2;i++)
{
for(j=i+1;j<=n-1;j++)
{
if(e[i].id>e[j].id)
{
temp=e[i];
e[i]=e[j];
e[j]=temp;
}
}
}
printf("SORTED LIST IS AS FOLLOWS\n");
display();
}






STUDENT DATABASE

#include<string.h>
#include<stdlib.h>
#include<conio.h>
#include<stdio.h>
#define MAX 100
typedef struct student
{
int rollno;
char name[20];
int marks;
 float percent;
}
st;
st e[MAX];
int n;
void create();
void display();
void search();
void sort();
int main()
{
int choice;
while(1)
 {
 printf("\n1.Create\n2.Display\n3.Search\n4.Sort\n7.EXIT");
 printf("\nEnter Your Choice:");
 scanf("%d",&choice);
 switch (choice)
{
case 1:create();
break;
case 2:display();
break;
case 3:search();
break;
case 4:sort();
break;
default:exit(0);
}
 }
getch();
}
void create()
{
int i;
printf("Enter The No. of New Records to Be Created:");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("Enter rollno no.,Name,marks,percentage:");
scanf("%d%s%d%f",&e[i].rollno,e[i].name,&e[i].marks,&e[i].percent);
}
}
void display()
{
int i;
printf("rollno\tNAME\tmarks\tpercentage");
for(i=0;i<n;i++)
{
printf("\n%d\t%s\t%d\t%f",e[i].rollno,e[i].name,e[i].marks,e[i].percent);
}
}
void search()
{
int rollno,i,flag=0;
printf("Enter the rollno of student:");
scanf("%d",&rollno);
for(i=0;i<n;i++)
{
if(e[i].rollno==rollno)
{
printf("\nRecord is Found!!");
printf("\nDetails of student are as follows\nrollno\tNAME\tmarks\tpercentage");
printf("\n%d\t%s\t%d\t%f",e[i].rollno,e[i].name,e[i].marks,e[i].percent);
flag=1;
break;
}
}
if(flag==0)
{
printf("\nRECORD NOT FOUND");
}
}
void sort()
{
st tst;
int i,j;
for(i=0;i<=n-2;i++)
{
for(j=i+1;j<=n-1;j++)
{
if(e[i].percent<e[j].percent)
{
tst=e[i];
e[i]=e[j];
e[j]=tst;
}
}
}
printf("SORTED LIST IS AS FOLLOWS\n");
display();
}












STRING WITH POINTER

#include <stdio.h>
#include <stdlib.h>
#include<string.h>
int str_len_ptr(char*);
void str_copy_ptr(char*,char*);
void str_rev_ptr(char*,char*);
int compare(char*, char*);
void str_substr(char*, char*);
void str_cat_ptr(char*,char*);
int main()
{
char str1[10], str2[10],str3[10];
 int len,choice,flag;
 printf("Enter Choice 1-Length, 2-Copy, 3-Reverse,4-Compare,5- substring,6-Palindrome,7-
Concatenation\n");
 printf("Enter choice\n");
 scanf("%d",&choice);
 switch(choice)
 {
 case 1:
 printf("Enter first string\n");
 scanf("%s",str1);
 int len=str_len_ptr(&str1);
 printf("length of string is=%d",len);
 break;
 case 2:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_copy_ptr(&str2,&str1);
 printf("copied string is=%s",str2);
 break;
 case 3:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_rev_ptr(&str2,&str1);
 printf("reversed string is=%s",str2);
 break;
 case 4:
 printf("Enter first string\n");
 scanf("%s",str1);
 printf("Enter second string\n");
 scanf("%s",str2);
 //flag=str_cmp(str1,str2);
 flag=compare(&str1, &str2);
 if(flag==0)
 printf("Both strings are not equal");
 else
 printf("Both strings are equal");
 break;
 case 5:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_substr(&str1,&str2);
 break;
 case 6:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_copy_ptr(&str2,&str1);
 str_rev_ptr(&str3,&str1);
 if(compare(str2,str3)==0)
 printf("\nThe string is not palindrome");
 else
 printf("\nThe string is palindrome");
 break;
 case 7:
 printf("Enter first string\n");
 scanf("%s",str1);
 printf("Enter second string\n");
 scanf("%s",str2);
 str_cat_ptr(&str1,&str2);
 break;
 }
 return 0;
}
int str_len_ptr(char *ptr)
{
 int count=0,i;
 for(i=0; *ptr!='\0';i++)
 {
 count++;
 ptr++;
 }
 return count;
}
void str_copy_ptr(char *op,char *ip)
{
 int count=0,i;
 for(i=0; *ip!='\0';i++)
 {
 *op++=*ip++;
 }
 *op='\0';
}
void str_rev_ptr(char *op,char *ip)
{
 int i,j=0,n;
 n=str_len_ptr(ip);
 for(i=n-1;i>=0;i--)
 {
 //*(op+j)=*(ip+i);
 *op++=*(ip+i);
 j++;
 }
 *(op+j)='\0';
}
int compare(char *ip, char *op)
{
int i;
for (i = 0; *ip!='\0'; i++)
{
if (*ip++ != *op++) //if mismatch
 {
 return 0;
 }
}
return 1;
}
void str_substr(char *ip, char *op)
{
int len, position,i,j=0,k;
len=str_len_ptr(ip);
printf("Enter position=");
scanf("%d",&position);
for (i=0; i<len-position;i++)
{
 k=position+i;
 *(op+j)=*(ip+k);
 j++;
}
op[j]='\0';
printf("Substring is %s", op);
}
void str_cat_ptr(char *ip,char *op)
{
 int i,j;
 for(i=0;*(ip+i)!='\0';i++);
 for(j=0;*(op+j)!='\0';j++)
 {
 *(ip+i)=*(op+j);
 i++;
 }
 *(ip+i)='\0';
 printf("After concatenation string is = %s", ip);}
STRING WITHOUT POINTER
#include <stdio.h>
#include <stdlib.h>
#include<string.h>
int str_length(char[]);
void str_copy(char str2[],char str1[]);
void str_rev(char str2[],char str1[]);
int str_cmp(char str1[],char str2[]);
void str_substr(char str1[], char str2[]);
void str_cat(char str1[],char str2[]);
int main()
{
char str1[10], str2[10],str3[10];
 int len,choice,flag;
 printf("Enter Choice 1-Length, 2-Copy, 3-Reverse,4-Compare,5- substring,6-Palindrome,7-
Concatenation\n");
 printf("Enter choice\n");
 scanf("%d",&choice);
 switch(choice)
 {
 case 1:
 printf("Enter first string\n");
 scanf("%s",str1);
 len=str_length(str1);
 printf("length of string is=%d",len);
 break;
 case 2:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_copy(str2,str1);
 printf("copied string is=%s",str2);
 break;
 case 3:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_rev(str2,str1);
 printf("reversed string is=%s",str2);
 break;
 case 4:
 printf("Enter first string\n");
 scanf("%s",str1);
 printf("Enter second string\n");
 scanf("%s",str2);
 flag=str_cmp(str1,str2);
 if(flag==0)
 printf("Both strings are equal");
 else
 printf("Both strings are not equal");
 break;
 case 5:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_substr(str1,str2);
 break;
 case 6:
 printf("Enter first string\n");
 scanf("%s",str1);
 str_copy(str2,str1);
 str_rev(str3,str1);
 if(str_cmp(str2,str3)==0)
 printf("\nThe string is palindrome");
 else
 printf("\nThe string is not palindrome");
 break;
 case 7:
 printf("Enter first string\n");
 scanf("%s",str1);
 printf("Enter second string\n");
 scanf("%s",str2);
 str_cat(str1,str2);
 printf("concatenated string is=%s",str1);
 break;
 }
 return 0;
}
int str_length(char str1[])
{
 int i, count=0;
 for (i=0;str1[i]!='\0';i++);
 //count=count+1;
 return i;
}
void str_copy(char str2[],char str1[])
{
 int i,j=0;
 for(i=0;str1[i]!='\0';i++)
 {
 str2[j]=str1[i];
 j=j+1;
 }
 str2[j]='\0';
}
void str_rev(char str2[],char str1[])
{
 int i,j=0,n;
 n=str_length(str1);
 for(i=n-1;i>=0;i--)
 {
 str2[j]=str1[i];
 j=j+1;
 }
 str2[j]='\0';
}
int str_cmp(char str1[],char str2[])
{
 int i=0,j=0,flag=0;
 for(i=0;str1[i]!='\0';i++)
 {
 if (str1[i]==str2[j])
 j=j+1;
 else
 {
 flag=1;
 break;
 }
 }
 if(flag==1)
 return 1;
 else
 return 0;
}
void str_substr(char str1[], char str2[])
{
int len, position,i,j=0;
len=str_length(str1);
printf("Enter position=");
scanf("%d",&position);
for (i=0; i<len-position;i++)
{
 str2[j]=str1[position+i];
 j=j+1;
}
str2[j]='\0';
printf("Substring is %s", str2);
}
void str_cat(char str1[],char str2[])
{
 int i,j;
 for(i=0;str1[i]!='\0';i++);
 for(j=0;str2[j]!='\0';j++)
 {
 str1[i++]=str2[j];
 }
 str1[i]='\0';
}
POLYNOMIAL ADDITION
#include<stdio.h>
#include<conio.h>
#define MAX 10
typedef struct poly
{ int coeff;
int power;
}POLY;
void main()
{
int m,n,i,j,k;
POLY pa[MAX],pb[MAX],pc[MAX];
printf("Enter number of terms of first polynomial=");
scanf("%d",&m);
printf("Coefficient and Power of first polynomial=");
for(i=0;i<m;i++)
scanf("%d%d",&pa[i].coeff,&pa[i].power);
printf("First polynomial=");
for(i=0;i<m-1;i++)
{
printf("%dx^%d+",pa[i].coeff,pa[i].power);
}
if(pa[i].power==0)
printf("%d",pa[i].coeff);
else
printf("%dx^%d",pa[i].coeff,pa[i].power);
printf("\nEnter number of terms of second polynomial=");
scanf("%d",&n);
printf("Coefficient and Power of second polynomial=");
for(i=0;i<n;i++)
scanf("%d%d",&pb[i].coeff,&pb[i].power);
printf("Second polynomial=");
for(i=0;i<n-1;i++)
{
printf("%dx^%d+",pb[i].coeff,pb[i].power);
}
if(pb[i].power==0)
printf("%d",pb[i].coeff);
else
printf("%dx^%d",pb[i].coeff,pb[i].power);
i=0;j=0;k=0;
while(i<m&&j<n)
{
if(pa[i].power==pb[j].power)
{
pc[k].coeff=pa[i].coeff+pb[j].coeff;
pc[k].power=pa[i].power;
i++;j++;k++;
}
else
{
if(pa[i].power>pb[j].power)
{
pc[k]=pa[i];
i++;k++;
}
else
{
pc[k]=pb[j]+;
j++;k++;
}
}
}
while(i<m)
{
pc[k]=pa[i];
i++;k++;
}
while(j<n)
{
 pc[k]=pb[i];
 j++;k++;
}
printf("\nAddition of two polynomial=");
for(i=0;i<k-1;i++)
{
printf("%dx^%d+",pc[i].coeff,pc[i].power);
}
if(pc[i].power==0)
printf("%d",pc[i].coeff);
else
printf("%dx^%d",pc[i].coeff,pc[i].power);
getch();
}



FILE OPEN READ
#include <stdio.h>
#define MAXCHAR 1000
int main() {
 FILE *fp;
 char str[MAXCHAR];
 char* filename = "E:\mk.txt";
 fp = fopen(filename, "r");
 if (fp == NULL){
 printf("Could not open file %s",filename);
 return 1;
 }
 while (fgets(str, MAXCHAR, fp) != NULL)
 printf("%s", str);
 fclose(fp);
 return 0;
}












FILE OPEN WRITE
#include <stdio.h>
#define LEN 256
int main ()
{
 FILE * fp;
 int i;
 /* open the file for writing*/
 fp = fopen ("E:\mk.txt","w");
 /* write 10 lines of text into the file stream*/
 for(i = 0; i < 10;i++){
 fprintf (fp, "This is line %d\n",i + 1);
 }
 /* close the file*/
 fclose (fp);
 return 0;
}












POSTFIX
#include<stdio.h>
#include<conio.h>
#define MAX 20
int stk[MAX];
int top=-1;
void push(int);
int pop();
void main()
{
char expr[40];
int i,op1,op2,result;
printf("\n enter expression");
gets(expr);
for(i=0;expr[i]!='\0';i++)
{
if(isdigit(expr[i]))
push(expr[i]-48);
else
{
op2=pop();
op1=pop();
switch(expr[i])
{
case'+':push(op1+op2);
break;
case'-':push(op1-op2);
break;
case'*':push(op1*op2);
break;
case'^':push(op1^op2);
break;
case'/':push(op1/op2);
break;
}
}
}
result=pop();
printf("result is %d",result);
getch();
}
void push(int x)
{
if(top==MAX-1)
printf("stack is full");
else
{
top++;
stk[top]=x;
}
}
int pop()
{
int x;
if(top==-1)
{
printf("\n stack is empty");
return(-9999);
}
else
{
x=stk[top],top--;
return(x);
}
}






















/*Singly linked List*/
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
typedef struct node
{
int data;
struct node *next;
}NODE;
NODE* create();
void display(NODE*);
NODE* insert(NODE*,int,int);
NODE* del(NODE*,int);
void search(NODE*,int);
int main()
{
NODE *head=NULL;
int choice,p,x;
while(1)
{
printf("\n1.Create\n2.Display\n3.Insert\n4.Delete\n5.Search\n6.Exit\nENTER YOUR
CHOICE:");
scanf("%d",&choice);
switch(choice)
{
case 1: head=create();
break;
case 2: display(head);
break;
case 3: printf("\nEnter Data and Position:");
scanf("%d%d",&x,&p);
head=insert(head,x,p);
display(head);
break;
case 4: printf("Enter Node no. To be Deleted:");
scanf("%d",&p);
head=del(head,p);
display(head);
break;
case 5: printf("Enter No. To be Searched");
scanf("%d",&x);
search(head,x);
break;
default:exit(0);
}
}
return 0;
}
NODE* create()
{ NODE *head,*temp,*newnode;
int i,n,x;
head=NULL;
printf("\nEnter How Many No.s=");
scanf("%d",&n);
for(i=1;i<=n;i++)
{ printf("\nEnter Data:");
scanf("%d",&x);
newnode=(NODE*)malloc(sizeof(NODE));
newnode->data=x;
newnode->next=NULL;
if(head==NULL)
{ head=newnode;
}
else
{ temp->next=newnode;
}
temp=newnode;
}
return(head);
}
void display(NODE *temp)
{ while(temp!=NULL)
{ printf("%d->",temp->data);
temp=temp->next;
}
printf("NULL");
}
NODE* insert(NODE *head1,int x,int p)
{ NODE *newnode,*temp=head1;
int i=1;
while(i<p&&temp!=NULL)
{ temp=temp->next; i++;
}
if(temp!=NULL)
{ newnode=(NODE*)malloc(sizeof(NODE));
 newnode->data=x;
if(p==0)
 { newnode->next=head1;
 head1=newnode;
 }
else { newnode->next=temp->next;
 temp->next=newnode;
}
} return(head1);
}
NODE* del(NODE *head1,int p)
{ NODE *temp,*prev;
int i=1;
temp=head1;
while(i<p&&temp!=NULL)
{ prev=temp;
temp=temp->next;
i++;
}
if(temp!=NULL)
{ if(p==1)
{
head1=head1->next;
free(temp);
}
else {
prev->next=temp->next;
free(temp);
}
}
else {
printf("INVALID POSITION");
}
return(head1);
}
void search(NODE *head1,int x)
{
NODE *temp;
int c=1;
temp=head1;
while(temp->data!=x&&temp!=NULL)
{
temp=temp->next;
c++;
}
if(temp!=NULL)
{
printf("No. is Found at Location %d",c);
}
else
{
printf("No. is Not Found:");
}
}






ARITHMETIC OOERATIONS

#include <stdio.h>
int main() {      int a,b,sum,sub,mul,divi;
    printf("Enter the numbers");
    scanf("%d",&a);
    printf("Enter the 2nd number");
    scanf("%d",&b);
    sum=a+b;
    sub=a-b;
    mul=a*b;
    divi=a/b;
    printf("Additionof two number is %d\n",sum);
    printf("Substraction of two number is %d\n",sub); 
    printf("multiplication of two number is %d\n",mul);
     printf("Division of two number is %d",divi);
     return 0;    }
                                       OUTPUT
Enter the numbers9
Enter the 2nd number3
Additionof two number is 12
Substraction of two number is 6
multiplication of two number is 18
Division of two number is 3
    




        PROGRAM 2  EVEN ODD
#include <stdio.h>
int main() {
 int num;
    printf("Enter the  number");
    scanf("%d",&num);
    if(num%2==0)
  printf("the number is even");
else
    printf("the number is odd");               }
                   OUTPUT 
      Enter the  number7
the number is odd 
















  PROGRAM 3
SWAPING
#include <stdio.h>
int main() {
 int a,b,c;
    printf("Enter the  1st number");
    scanf("%d",&a);
    printf("Enter the  2nd number");
    scanf("%d",&b);
    c=a;
    a=b;
    b=c;
    printf("Aftrr swaping\n 1st number is %d",a);
    printf("  2nd number is %d",b);
}


OUTPUT 
Enter the  1st number9
Enter the  2nd number8
Aftrr swaping
 1st number is 8  2nd number is 9







PROGRAM 4
MAXIMUM NUMBER
#include <stdio.h>
int main() {
    int a,b,c;
    printf("Enter the numbers");
    scanf("%d",&a);
    scanf("%d",&b);
    scanf("%d",&c);
    if(a>b && a>c)
        printf("max no. is %d",a);
    else if(b>c && b>a)
        printf("max no. is %d",b);
    else printf("max no.is %d",c);
    return 0;
}
OUTPUT 
Enter the numbers9
5
8
max no.is 9








 PROGRAM 5  FACTORIAL
#include<stdio.h>
int main() {
    int a,fact=1;
    printf("enter the number");
    scanf("%d",&a);
    for(int i=1;i<=a;i++)
    {
        fact=fact*i;
    }
    printf("%d",fact);
    return 0;
}
OUTPUT 
enter the number5
120













TABLE
#include <stdio.h>
int main() {
  int n;
  printf("Enter an integer: ");
  scanf("%d", &n);

  for (int i = 1; i <= 10; ++i) {
    printf("%d * %d = %d \n", n, i, n * i);
  }
  return 0;
}

OUTPUT
Enter an integer: 9
9 * 1 = 9
9 * 2 = 18
9 * 3 = 27
9 * 4 = 36
9 * 5 = 45
9 * 6 = 54
9 * 7 = 63
9 * 8 = 72
9 * 9 = 81
9 * 10 = 90




Design a calculator using if else case
#include <stdio.h>
int main()
{
 float a,b,c,sum,sub,mul,div;
 printf("Enter first number=");
 scanf("%f",&a);
 printf("Enter second number=");
 scanf("%f",&b);
 printf("1=Addition\n");
 printf("2=Subtraction\n    ");
 printf("3=Multiplication\n");
 printf("4=Division\n");
 printf("Enter the type of operation=");
 scanf("%f",&c);
 if(c==1)
 {
     sum=a+b;
     printf("Addition of numbers is %f",sum);
 }
 else if(c==2)
 {
     sub=a-b;
     printf("Subtraction of numbers is %f",sub);
 }
  else if(c==3)
 {
     mul=a*b;
     printf("Multiplication of numbers is %f",mul);
 }
  else if (c==4)
 {
     div=a/b;
     printf("Division of numbers is %f",div);
 }
 return 0;
}
OUTPUT-
Enter first number=20
Enter second number=5
1=Addition
2=Subtraction
    3=Multiplication
4=Division
Enter the type of operation=4
Division of numbers is 4.000000
Process returned 0 (0x0)   execution time : 6.842 s
Press any key to continue.
